{"version":3,"sources":["logo.png","Components/UI/SideDrawer/SideDrawer.module.css","Components/UI/Backdrop/Backdrop.js","Components/Spinner/Spinner.js","Components/UI/Toolbar/Toolbar.module.css","Components/NavigationItems/NavigationItem/NavigationItem.module.css","Components/NavigationItems/NavigationItems.module.css","Components/UI/Backdrop/Backdrop.module.css","Container/Layout/Layout.module.css","Components/Spinner/Spinner.module.css","Components/NavigationItems/NavigationItem/NavigationItem.js","Components/NavigationItems/NavigationItems.js","Components/UI/Toolbar/Toolbar.js","Components/UI/SideDrawer/SideDrawer.js","Container/Layout/Layout.js","Container/RouterContainer/RouterContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backDrop","props","className","show","classes","backdrop","onClick","clickListener","children","spinner","loader","nav","NavItem","to","link","navItems","NavItems","toolbar","src","logo","alt","NavigationItems","sideDrawer","localClass","issideDrawerOpen","Open","Close","Fragment","Backdrop","join","Logo","sideDrawerOpener","openSideDrawer","Layout","state","backDropListener","setState","SideDrawer","this","Toolbar","Styles","main","React","Component","BurgerBuilder","lazy","Checkout","RouterContainer","burgers","price","addToCart","burger","finalprice","finalburgers","removeOldBurgers","Suspense","fallback","Spinner","path","exact","render","App","AppStyles","body","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0cd5d949.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideDrawer\":\"SideDrawer_sideDrawer__2rBKO\",\"Open\":\"SideDrawer_Open__3EAf2\",\"Close\":\"SideDrawer_Close__1vovS\",\"sideDrawerOpener\":\"SideDrawer_sideDrawerOpener__dsGoi\"};","import React from \"react\";\r\nimport classes from \"./Backdrop.module.css\";\r\nconst backDrop = props => {\r\n  return (\r\n    <div\r\n      className={props.show ? classes.backdrop : null}\r\n      onClick={props.clickListener}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\nexport default backDrop;\r\n","import React from \"react\";\r\nimport classes from \"./Spinner.module.css\";\r\n\r\nconst spinner = () => <div className={classes.loader}>Loading...</div>;\r\nexport default spinner;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"Toolbar_toolbar__38RE0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItem\":\"NavigationItem_NavItem__2yMet\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavItems\":\"NavigationItems_NavItems__ISLv1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Backdrop_backdrop__2L-_y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__L18Z1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__3XB3-\",\"load7\":\"Spinner_load7__3gibJ\"};","import React from \"react\";\r\nimport classes from \"./NavigationItem.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst nav = props => (\r\n  <li className={classes.NavItem}>\r\n    <NavLink to={props.link}>{props.children}</NavLink>\r\n  </li>\r\n);\r\n\r\nexport default nav;\r\n","import React from \"react\";\r\nimport NavItem from \"./NavigationItem/NavigationItem\";\r\nimport classes from \"./NavigationItems.module.css\";\r\nconst navItems = props => (\r\n  <ul className={classes.NavItems}>\r\n    <NavItem link={\"/builder\"}>Burger Builder</NavItem>\r\n    <NavItem link={\"/checkout\"}>Checkout</NavItem>\r\n  </ul>\r\n);\r\n\r\nexport default navItems;\r\n","import React from \"react\";\r\nimport classes from \"./Toolbar.module.css\";\r\nimport logo from \"../../../logo.png\";\r\nimport NavigationItems from \"../../NavigationItems/NavigationItems\";\r\nconst toolbar = props => {\r\n  return (\r\n    <header className={classes.toolbar}>\r\n      <img src={logo} alt={\"logo not found\"} />\r\n      <nav>\r\n        <NavigationItems />\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\nexport default toolbar;\r\n","import React from \"react\";\r\nimport classes from \"./SideDrawer.module.css\";\r\nimport NavigationItems from \"../../NavigationItems/NavigationItems\";\r\nimport Logo from \"../../../logo.png\";\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\nconst sideDrawer = props => {\r\n  let localClass = [\r\n    classes.sideDrawer,\r\n    props.issideDrawerOpen ? classes.Open : classes.Close\r\n  ];\r\n  return (\r\n    <React.Fragment>\r\n      <Backdrop\r\n        show={props.issideDrawerOpen}\r\n        clickListener={props.clickListener}\r\n      />\r\n\r\n      <div className={localClass.join(\" \")}>\r\n        <img src={Logo} onClick={props.clickListener} alt={\"MENU\"} />\r\n        <nav>\r\n          <NavigationItems />\r\n        </nav>\r\n      </div>\r\n\r\n      <button\r\n        className={classes.sideDrawerOpener}\r\n        onClick={props.openSideDrawer}\r\n      >\r\n        <img src={Logo} alt={\"MENU\"} />\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default sideDrawer;\r\n","import React from \"react\";\r\nimport Toolbar from \"../../Components/UI/Toolbar/Toolbar\";\r\nimport SideDrawer from \"../../Components/UI/SideDrawer/SideDrawer\";\r\nimport Styles from \"./Layout.module.css\";\r\nclass Layout extends React.Component {\r\n  state = {\r\n    sideDrawer: false\r\n  };\r\n  backDropListener = () => {\r\n    this.setState({ sideDrawer: false });\r\n  };\r\n  openSideDrawer = () => {\r\n    this.setState({ sideDrawer: true });\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <SideDrawer\r\n          issideDrawerOpen={this.state.sideDrawer}\r\n          clickListener={this.backDropListener}\r\n          openSideDrawer={this.openSideDrawer}\r\n        />\r\n        <Toolbar />\r\n        <main className={Styles.main}>{this.props.children}</main>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Spinner from \"../../Components/Spinner/Spinner\";\r\n\r\nconst BurgerBuilder = React.lazy(() =>\r\n  import(\"../BurgerBuilder/BurgerBuilder\")\r\n);\r\nconst Checkout = React.lazy(() => import(\"../Checkout/Checkout\"));\r\n\r\nclass RouterContainer extends React.Component {\r\n  state = {\r\n    burgers: null,\r\n    price: 0\r\n  };\r\n  addToCart = (burger, price) => {\r\n    const finalprice = this.state.price + price;\r\n    const finalburgers =\r\n      this.state.burgers === null ? [burger] : [...this.state.burgers, burger];\r\n    this.setState({ burgers: finalburgers, price: finalprice });\r\n  };\r\n  removeOldBurgers = () => this.setState({ burgers: null, price: 0 });\r\n  render() {\r\n    return (\r\n      <React.Suspense fallback=<Spinner />>\r\n        <Switch>\r\n          <Route\r\n            path=\"/builder\"\r\n            exact\r\n            render={() => <BurgerBuilder addToCart={this.addToCart} />}\r\n          />\r\n          <Route\r\n            path=\"/checkout\"\r\n            exact\r\n            render={() => (\r\n              <Checkout\r\n                burgers={this.state.burgers}\r\n                price={this.state.price}\r\n                removeOldBurgers={this.removeOldBurgers}\r\n              />\r\n            )}\r\n          />\r\n          <Redirect to=\"/builder\" />\r\n        </Switch>\r\n      </React.Suspense>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RouterContainer;\r\n","import React, { Component } from \"react\";\nimport AppStyles from \"./App.module.css\";\nimport Layout from \"./Container/Layout/Layout\";\nimport RouterContainer from \"./Container/RouterContainer/RouterContainer\";\nimport { BrowserRouter } from \"react-router-dom\";\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Layout className={AppStyles.body}>\n          <RouterContainer />\n        </Layout>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}